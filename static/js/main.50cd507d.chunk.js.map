{"version":3,"sources":["Redux/reducer.js","vk-api.js","Containers/UserGroupsList.js","Containers/UserFriendsList.js","Panels/Main/MainPanel.js","Panels/FriendGroups/FriendGroupsPanel.js","App.js","index.js"],"names":["ACTIONS","initialState","activeView","activePanel","activePanelProps","activeTab","fetchedUser","authToken","changePanel","panel","data","dispatch","type","payload","MainReducer","state","arguments","length","undefined","action","Object","objectSpread","view","getUserGroups","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","userId","wrap","_context","prev","next","connect","send","method","params","user_id","fields","extended","v","access_token","abrupt","sent","stop","_x","_x2","apply","this","getUserFriends","_ref2","_callee2","_context2","order","name_case","_x3","_x4","UserGroupsList","props","userGroups","react_default","createElement","vkui","map","group","key","id","before","src","photo_200","description","concat","members_count","name","mapDispatchToProps","ReactConnect","userFriends","friend","onClick","fullname","first_name","last_name","size","photo_100","changeActiveTab","tab","main","_useState","useState","_useState2","slicedToArray","setUserGroups","_useState3","_useState4","setUserFriends","then","res","groups","response","items","fetchUserGroups","friends","fetchUserFriends","react","noShadow","vertical","theme","selected","style","marginTop","Containers_UserGroupsList","Containers_UserFriendsList","renderTab","osname","platform","ReduxConnect","_props$activePanelPro","friendGroups","setFriendGroups","addon","left","IOS","chevron_back_default","back_default","getFriendGroups","App","go","e","_this","currentTarget","dataset","to","_this$props","changeFetchedUser","changeAuthToken","subscribe","detail","console","log","app_id","scope","_this$props2","Main_MainPanel","FriendGroups_FriendGroupsPanel","React","Component","changeView","token","appReducers","store","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.50cd507d.chunk.js","sourcesContent":["const ACTIONS = {\n    CHANGE_VIEW: \"MAIN_CHANGE_VIEW\",\n    CHANGE_PANEL: \"MAIN_CHANGE_PANEL\",\n    CHANGE_FETCHED_USER: \"MAIN_CHANGE_FETCHED_USER\",\n    CHANGE_ACTIVE_TAB: \"MAIN_CHANGE_ACTIVE_TAB\",\n    CHANGE_USER_FRIENDS: \"MAIN_CHANGE_USER_FRIENDS\",\n    CHANGE_AUTH_TOKEN: \"MAIN_CHANGE_AUTH_TOKEN\"\n}\n\nconst initialState = {\n    activeView: 'main',\n    activePanel: 'main',\n    activePanelProps: null,\n    activeTab: 'groups',\n    fetchedUser: null,\n    authToken: null\n}\n\nconst MainReducer = (state = initialState, action) => {\n    const payload = action.payload;\n    switch (action.type) {\n        case ACTIONS.CHANGE_VIEW:\n            return {\n                ...state,\n                activeView: payload.view,\n                activePanel: payload.panel\n            };\n        case ACTIONS.CHANGE_PANEL:\n            return {\n                ...state,\n                activePanel: payload.panel,\n                activePanelProps: payload.data\n            };\n        case ACTIONS.CHANGE_ACTIVE_TAB:\n            return {\n                ...state,\n                activeTab: payload\n            };\n        case ACTIONS.CHANGE_FETCHED_USER:\n            return {\n                ...state,\n                fetchedUser: payload\n            };\n        case ACTIONS.CHANGE_AUTH_TOKEN:\n            return {\n                ...state,\n                authToken: payload\n            };\n        default:\n            return state\n    }\n}\n\nexport const changeView = (view, panel) => dispatch => {\n    dispatch({\n        type: ACTIONS.CHANGE_VIEW,\n        payload: {\n            view: view,\n            panel: panel\n        }\n    });\n}\n\nexport const changePanel = (panel, data) => dispatch => {\n    dispatch({\n        type: ACTIONS.CHANGE_PANEL,\n        payload: {\n            panel,\n            data\n        }\n    });\n}\n\nexport const changeAuthToken = token => dispatch => {\n    console.log(\"new token: \", token);\n    dispatch({\n        type: ACTIONS.CHANGE_AUTH_TOKEN,\n        payload: token\n    });\n}\n\nexport const changeActiveTab = tab => async dispatch => {\n    dispatch({\n        type: ACTIONS.CHANGE_ACTIVE_TAB,\n        payload: tab\n    });\n}\n\nexport const changeFetchedUser = fetchedUser => dispatch => {\n    dispatch({\n        type: ACTIONS.CHANGE_FETCHED_USER,\n        payload: fetchedUser\n    })\n}\n\nexport default MainReducer;","import connect from '@vkontakte/vkui-connect-promise';\n\nexport const getUserGroups = async (authToken, userId) => {\n    return await connect.send(\"VKWebAppCallAPIMethod\", {\n        \"method\": \"groups.get\",\n        \"params\": {\n            \"user_id\": userId,\n            \"fields\": \"members_count\",\n            \"extended\": true,\n            \"v\": \"5.95\",\n            \"access_token\": authToken\n        }\n    });\n}\n\nexport const getUserFriends = async (authToken, userId) => {\n    return await connect.send(\"VKWebAppCallAPIMethod\", {\n        \"method\": \"friends.get\",\n        \"params\": {\n            \"user_id\": userId,\n            \"order\": \"random\",\n            \"fields\": \"photo_100\",\n            \"name_case\": \"nom\",\n            \"v\": \"5.95\",\n            \"access_token\": authToken\n        }\n    });\n}","import React from 'react';\nimport {Avatar, List, Cell} from '@vkontakte/vkui'\n\nconst UserGroupsList = (props) => {\n\n    const {userGroups} = props;\n\n    return (\n        <List>\n            {userGroups.map(group => {\n                return (\n                    <Cell\n                        key={group.id}\n                        before={< Avatar src = {\n                        group.photo_200\n                    } />}\n                        description={`${group.members_count} Подписчиков`}>{group.name}</Cell>\n                )\n            })\n}\n        </List>\n    )\n}\n\nexport default UserGroupsList;","import React from 'react';\nimport {connect as ReactConnect} from 'react-redux';\nimport {changePanel} from '../Redux/reducer';\nimport {Avatar, List, Cell} from '@vkontakte/vkui';\n\nconst UserFriendsList = (props) => {\n\n    const {userFriends, changePanel} = props;\n\n    return (\n        <List>\n            {userFriends.map(friend => {\n                return (\n                    <Cell\n                        onClick={() => {\n                        changePanel('friendGroups',{id: friend.id, fullname: `${friend.first_name} ${friend.last_name}`});\n                    }}\n                        key={friend.id}\n                        before={< Avatar size = {\n                        48\n                    }\n                    src = {\n                        friend.photo_100\n                    } />}>{friend.first_name} {friend.last_name}</Cell>\n                )\n            })\n}\n        </List>\n    )\n}\nconst mapDispatchToProps = {\n    changePanel\n}\nexport default ReactConnect(null, mapDispatchToProps)(UserFriendsList);","import React, {Fragment, useState} from 'react';\nimport {Tabs, TabsItem, HorizontalScroll, PanelHeader, FixedLayout} from '@vkontakte/vkui';\nimport {connect as ReactConnect} from 'react-redux';\n\nimport {changeActiveTab} from '../../Redux/reducer';\nimport {getUserGroups, getUserFriends} from '../../vk-api';\nimport UserGroupsList from '../../Containers/UserGroupsList';\nimport UserFriendsList from '../../Containers/UserFriendsList';\n\nconst MainPanel = props => {\n\n    const [userGroups, setUserGroups] = useState([]);\n    const [userFriends, setUserFriends] = useState([]);\n    const {\n        activeTab,\n        fetchedUser,\n        changeActiveTab,\n        authToken\n    } = props;\n\n    const fetchUserGroups = (authToken, userId) => {\n        getUserGroups(authToken, userId).then(res => {\n            const groups = res.data.response.items;\n            setUserGroups(groups);\n        });\n    }\n\n    const fetchUserFriends = (authToken, userId) => {\n        getUserFriends(authToken, userId).then(res => {\n            const friends = res.data.response.items;\n            setUserFriends(friends);\n        });\n    }\n\n    if (fetchedUser && authToken) {\n        if (userGroups.length === 0) \n            fetchUserGroups(authToken, fetchedUser.id);\n        if (userFriends.length === 0) \n            fetchUserFriends(authToken, fetchedUser.id);\n        }\n    \n    const renderTab = () => {\n        switch (activeTab) {\n            case \"groups\":\n                return (<UserGroupsList userGroups={userGroups}/>)\n            case \"friends\":\n                return (<UserFriendsList userFriends={userFriends}/>)\n            default:\n                return (null)\n        }\n    }\n\n    return (\n        <Fragment>\n            <PanelHeader noShadow={true}>Мой паблик</PanelHeader>\n            <FixedLayout vertical=\"top\">\n                <Tabs type=\"buttons\" theme=\"header\">\n                    <HorizontalScroll>\n                        <TabsItem\n                            onClick={() => {\n                            changeActiveTab('groups')\n                        }}\n                            selected={activeTab === 'groups'}>\n                            Мои группы\n                        </TabsItem>\n                        <TabsItem\n                            onClick={() => {\n                            changeActiveTab('friends')\n                        }}\n                            selected={activeTab === 'friends'}>\n                            Мои друзья\n                        </TabsItem>\n                        <TabsItem\n                            onClick={() => {\n                            changeActiveTab('friendsRecommendations')\n                        }}\n                            selected={activeTab === 'friendsRecommendations'}>\n                            Рекомендации друзей\n                        </TabsItem>\n                    </HorizontalScroll>\n                </Tabs>\n            </FixedLayout>\n            <div id=\"content\" style={{\n                marginTop: '48px'\n            }}>{renderTab()}\n            </div>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = state => state.main\nconst mapDispatchToProps = {\n    changeActiveTab\n}\nexport default ReactConnect(mapStateToProps, mapDispatchToProps)(MainPanel);","import React, {Fragment, useState} from 'react';\nimport {connect as ReduxConnect} from 'react-redux';\nimport {PanelHeader, HeaderButton, platform, IOS} from '@vkontakte/vkui';\nimport {changePanel} from '../../Redux/reducer'\nimport {getUserGroups} from '../../vk-api';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport UserGroupsList from '../../Containers/UserGroupsList';\n\nconst osname = platform();\n\nconst FriendGroupsPanel = props => {\n\n    const {id, fullname} = props.activePanelProps;\n    const {authToken, changePanel} = props;\n    const [friendGroups, setFriendGroups] = useState([]);\n\n    const getFriendGroups = id => {\n        if (friendGroups.length === 0) {\n            getUserGroups(authToken, id).then(res=>{\n                setFriendGroups( res.data.response.items );\n            });\n            return (null);\n        } else {\n            return (\n                <UserGroupsList userGroups={friendGroups}/>\n                );\n        }\n    }\n\n    return (\n        <Fragment>\n            <PanelHeader\n            addon={<HeaderButton onClick={()=>{changePanel('main', {})}}>Назад</HeaderButton>}\n            left={<HeaderButton>{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\n            >{fullname}\n            </PanelHeader>\n            <div>{getFriendGroups(id)}</div>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = state => state.main\nconst mapDispatchToProps = {\n    changePanel\n}\n\nexport default ReduxConnect(mapStateToProps, mapDispatchToProps)(FriendGroupsPanel);","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport {connect as ReactConnect} from 'react-redux';\nimport {Root, View, Panel} from '@vkontakte/vkui';\nimport {changeView, changePanel, changeFetchedUser, changeAuthToken} from './Redux/reducer';\nimport MainPanel from './Panels/Main/MainPanel';\nimport FriendGroupsPanel from './Panels/FriendGroups/FriendGroupsPanel';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nclass App extends React.Component {\n    \n    componentDidMount() {\n\n        const { changeFetchedUser, changeAuthToken } = this.props;\n\n        connect.subscribe((e) => {\n            switch (e.detail.type) {\n                case\n                    'VKWebAppGetUserInfoResult':\n                    changeFetchedUser(e.detail.data);\n                    break;\n                case\n                    'VKWebAppAccessTokenReceived':\n                    changeAuthToken(e.detail.data.access_token);\n                    break;\n                default:\n                    console.log(e.detail.type);\n            }\n        });\n\n        connect.send('VKWebAppGetUserInfo', {});\n        connect.send('VKWebAppGetAuthToken', {\n            'app_id': 6921887,\n            'scope': 'groups,friends'\n        });\n    }\n\n    go = (e) => {\n        // this.setState({activePanel: e.currentTarget.dataset.to})\n        this.props.changePanel(e.currentTarget.dataset.to, null)\n    };\n\n    render() {\n\n        const {activeView, activePanel} = this.props;\n\n        return (\n            <Root activeView={activeView}>\n                <View id=\"main\" activePanel={activePanel}>\n                    <Panel id=\"main\">\n                        <MainPanel/>\n                    </Panel>\n                    <Panel id=\"friendGroups\">\n                        <FriendGroupsPanel/>\n                    </Panel>\n                </View>\n            </Root>\n\n        );\n    }\n}\n\nconst mapStateToProps = state => state.main\nconst mapDispatchToProps = {\n    changeView,\n    changePanel,\n    changeFetchedUser,\n    changeAuthToken\n}\n\nexport default ReactConnect(mapStateToProps, mapDispatchToProps)(App);","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect-promise';\nimport App from './App';\n\nimport {Provider} from 'react-redux';\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport main from './Redux/reducer';\nimport thunk from 'redux-thunk';\n\nconst appReducers = {\n    main\n};\nconst store = createStore(combineReducers(appReducers), applyMiddleware(thunk));\n// import registerServiceWorker from './sw'; Init VK App\nconnect.send('VKWebAppInit', {});\n// connect.send('VKWebAppGetUserInfo', {}); connect.send('VKWebAppGetAuthToken',\n// {'app_id': 6921887, 'scope': 'groups'}); Если вы хотите, чтобы ваше\n// веб-приложение работало в оффлайне и загружалось быстрее, расскомментируйте\n// строку с registerServiceWorker(); Но не забывайте, что на данный момент у\n// технологии есть достаточно подводных камней Подробнее про сервис воркеры\n// можно почитать тут — https://vk.cc/8MHpmT registerServiceWorker();\n\nReactDOM.render(\n    <Provider store={store}><App/></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}